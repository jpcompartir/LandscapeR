[{"path":"https://jpcompartir.github.io/LandscapeR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 LandscapeR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/articles/running_app_locally.html","id":"running-in-a-separate-process","dir":"Articles","previous_headings":"","what":"Running in a Separate Process","title":"Running Your App Locally","text":"two main methods, one involves using terminal, involves {processx} R package. using terminal isn’t daunting prospect, recommend approach. use steps, need save Rscript (.R file) gives instructions run app. First need load libraries set port shiny app, ’s important process using port. Second need make sure data columns app requires, : document, date, text, clean_text, cluster, V1, V2, permalink. define function us. Third get data run prepare_data_for_landscaper function. need save script file. recommend saving current Rstudio project, particularly feel confident navigating file system via file paths. Let’s say save ‘run_app_locally.R’, project working called my_project, located folder called ‘projects’ can found home directory. project’s working directory, path file run_app_locally.R, ’s !","code":"library(LandscapeRGolem) library(dplyr) library(readr) options(shiny.port = 3838)  prepare_data_for_landscaper <- function(data, document_var, date_var, text_var, clean_text_var, colour_var, x_var, y_var, permalink_var) {   data <- data %>%     dplyr::rename(       document = {{ document_var }},       date = {{ date_var }},       text = {{ text_var }},       clean_text = {{ clean_text_var }},       cluster = {{ colour_var }},       V1 = {{ x_var }},       V2 = {{ y_var }},       permalink = {{ permalink_var }}     )   return(data) }  data <- read_csv(path / to / data)  data <- prepare_data_for_landscaper(data, document, date, text, clean_text, cluster_name, V1, V2, permalink)  LandscapeRGolem::run_app_from_other_project(data = data)"},{"path":"https://jpcompartir.github.io/LandscapeR/articles/running_app_locally.html","id":"processx","dir":"Articles","previous_headings":"Running in a Separate Process","what":"Processx","title":"Running Your App Locally","text":"Rstudio project, provided saved file named ‘run_app_locally.R’ containing code , data correctly entered, able access app like : type localhost:3838 browser, find LandscapeRGolem running. kill app:","code":"library(processx) r_process <- process$new(\"Rscript\", \"run_app_locally.R\") r_process # Check it says running, not finished r_process$kill() r_process # should be finished now, not running."},{"path":"https://jpcompartir.github.io/LandscapeR/articles/running_app_locally.html","id":"terminal","dir":"Articles","previous_headings":"Running in a Separate Process","what":"Terminal","title":"Running Your App Locally","text":"terminal, path file ~/projects/my_project/run_app_locally.R Open terminal execute Rscript ~~/projects/my_project/run_app_locally.R see ‘Listening http://127.0.0.1:3838’ means can copy http url, type ‘localhost:3838’ browser open app. R console remain free. Remember close app done entering terminal (Mac) typing ‘control + c’ hitting enter. see ‘Execution halted’.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/articles/shiny_app_user_guide.html","id":"home","dir":"Articles","previous_headings":"","what":"Home","title":"Shiny App User Guide","text":"Home first tab ’ll see open app. aims provide quick intro tab , contains cool hex sticker. generally won’t spend much time tab, updating package ’s worth checking see anything changed. home page provides instructions resetting app, warns return app state first encountered . can refresh browser page, close app via terminal, R session, R process outlined ‘run app locally’.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/articles/shiny_app_user_guide.html","id":"survey-landscape","dir":"Articles","previous_headings":"","what":"Survey Landscape","title":"Shiny App User Guide","text":"tab work done, main reason app exists. Navigate tab clicking navigation bar. find four widgets top screen, landscape plot, data table, scroll , controls filter minimum maximum co-ordinates landscape show.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/articles/shiny_app_user_guide.html","id":"landscape-plot","dir":"Articles","previous_headings":"Survey Landscape","what":"Landscape Plot","title":"Shiny App User Guide","text":"landscape plot display document data app loaded single point. original text variable pre-processed, embedded, dimensions reduced clustered topic modelled. mean point map similar nearby points. can hover point see preview just point’s text. However, ’s likely want select multiple points (later) view Data Table right landscape plot.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/articles/shiny_app_user_guide.html","id":"the-four-widgets","dir":"Articles","previous_headings":"Survey Landscape > Landscape Plot","what":"The four widgets","title":"Shiny App User Guide","text":"Colour Variable - select variable used colour point. Generally something meaningful research, relatively possible values, .e. topic, cluster. something like ‘date’. Selecting date mean app tries find colour different value date, take long time run likely result error. Data - entering file name clicking download download data app directory select. used delete button (explained ) downloading data mean get data frame first encountered minus deleted rows. good way clean data, ’ll often find entire clusters regions map difficult clean via keywords, easy using selection tool. Enter name file wish download, append .csv file name, ’s need add . Search Text - Entering regular expression clicking magnifying class filter landscape plot just documents contain regular expression. Selected Data - Clicking download button allows download selections. might want use find particularly interesting area map like analyse R, Excel etc. spell Enter name file wish download, append .csv file name, ’s need add .","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/articles/shiny_app_user_guide.html","id":"selecting-data","dir":"Articles","previous_headings":"Survey Landscape > Landscape Plot","what":"Selecting Data","title":"Shiny App User Guide","text":"Plotly built icons allow perform different actions plotly plots. don’t click , clicking landscape dragging around perform ‘lasso selection’, allows draw custom shapes select points . ’ve selected points, ’ll notice Data Table populate, label selection widget appear, bottom right-hand corner landscape plot, Delete Selections widget. can narrow much data available select via two main avenues: RegeX Filter - enter regular expression find documents include expression Clicking Colour Variable Labels - single click topic name colour top right landscape plot, temporarily disappear. double click, topic remain, others temporarily disappear. can double click undo.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/articles/shiny_app_user_guide.html","id":"other-plotly-widgets","dir":"Articles","previous_headings":"Survey Landscape > Landscape Plot","what":"Other plotly widgets","title":"Shiny App User Guide","text":"Hover individual widget get name/. primer, can: Download plot png Rectangle Zoom Pan Box Select Lasso Select Draw line - can labelled Draw circle - can labelled Draw rectangle - can labelled Zoom Zoom Autoscale Reset Axes Beware, settings liable reset anything interacts plot’s underlying data, e.g. select new data, delete data.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/articles/shiny_app_user_guide.html","id":"data-table","dir":"Articles","previous_headings":"Survey Landscape","what":"Data Table","title":"Shiny App User Guide","text":"Without Data Table updating response actions, app incredibly difficult use. table lets read assess multiple posts , without rely hovering individual points. permalink column edited can click view post original form, website came . column can filtered according data type contains. example, can filter topic cluster variable see posts belong one specified range topics. can filter text contain specific words, change underlying data landscape plot, reflected table.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/articles/shiny_app_user_guide.html","id":"bigram-network","dir":"Articles","previous_headings":"","what":"Bigram Network","title":"Shiny App User Guide","text":"Provided ’ve selected data, ’ll find rendered bigram network click tab. keep app performant, network count bigrams 5,000 documents; selected 5,000 documents, data sampled plot rendered. reason option o download plot. wish create savable version bigram network, download selected data, read data R, use {ParseR} render network. encouraged download selected data plot render app, promote reproducible research!","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/articles/shiny_app_user_guide.html","id":"distribution-tab","dir":"Articles","previous_headings":"","what":"Distribution Tab","title":"Shiny App User Guide","text":"tab viewing helpful summary plots currently selected data. comes four plots:","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/articles/shiny_app_user_guide.html","id":"volume-over-time","dir":"Articles","previous_headings":"Distribution Tab","what":"Volume over Time","title":"Shiny App User Guide","text":"Shows count documents equal time steps, binned given unit time. plot draggable element, allows resize plot give space. Surrounding plots move automagically. controls fairly intuitive: Height Width sliders allow change height width plot. Increasing values make bars bigger, decreasing opposite. Date Range allows select start point end point time view. Unit allows select time unit, optional values : day, week, month, year, quarter. Smooth allows add smoothing line data, click two boxes appear, one toggles standard error segment, changes colour smoothing line. Custom Titles toggled allows add graph’s title, subtitle, caption, x & y axes titles. Download downloads plot current dimensions, titles added","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/articles/shiny_app_user_guide.html","id":"sentiment-over-time","dir":"Articles","previous_headings":"Distribution Tab","what":"Sentiment over Time","title":"Shiny App User Guide","text":"Shows count sentiment category, equal time steps, binned given time unit. new settings added provided Volume Time chart.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/articles/shiny_app_user_guide.html","id":"sentiment-distribution","dir":"Articles","previous_headings":"Distribution Tab","what":"Sentiment Distribution","title":"Shiny App User Guide","text":"Rather showing counts sentiment time, tab shows overall sentiment distribution. new settings.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/articles/shiny_app_user_guide.html","id":"token-distribution","dir":"Articles","previous_headings":"Distribution Tab","what":"Token Distribution","title":"Shiny App User Guide","text":"plot counts top words selected data. clean text variable stop words removed, filled uninformative high-frequency words like ‘’, ‘’, ‘’ etc. ’s recommended remove stop words clean text variable, also impact bigram network.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/articles/shiny_app_user_guide.html","id":"compare-groups","dir":"Articles","previous_headings":"","what":"Compare Groups","title":"Shiny App User Guide","text":"tab provides three plots aim help understand differences groups. grouping variable usually something like ‘topic’ ‘cluster’, can selected plot separately. may high number groups, plot’s height/width affected number, draggable, resize element available plots. find current plot overlapping plot , drag element give current plot space. However, future draggable elements may removed favour auto re-sizing html container dynamically.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/articles/shiny_app_user_guide.html","id":"weighted-log-odds","dir":"Articles","previous_headings":"Compare Groups","what":"Weighted log-odds","title":"Shiny App User Guide","text":"plot compares groups selected data. shows, group, frequency weighted log-odds ratio term, positive log-odds ratio means term likely occur group groups, vice versa negative. See ParseR Documentation complete explanation weighted log-odds works, Julia Silge, creator Tidylo’s explanation Text Size controls text word inside plot Number Rows controls many rows plots printed . ’s recommended increase number match number unique values grouping variable. 10 topics, grouping variable topic, set value 10. However, increasing width height can mean fewer rows suffice. top_n controls maximum number words shown group’s plot top_terms_cutoff controls number terms top_n terms can selected . parameter slightly tricky, see . calculating WLOs, ’s important understand words corpus tend distributed. distribution tends follow zipf’s law, means ’ll tend see thousands words frequency 1/2. want chart tell us words distinctive unique value grouping variable, don’t want chart filled super low-frequency words appear grouping variable. interested likely top 100 words frequency, across entire corpus, appear group relative others, can set top_terms_cutoff = 100.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/articles/shiny_app_user_guide.html","id":"group-sentiment","dir":"Articles","previous_headings":"Compare Groups","what":"Group Sentiment","title":"Shiny App User Guide","text":"chart similar Sentiment Distribution tab, except shows bar unique value grouping variable. many unique values grouping variable, ’ll many bars. Whilst may seem good thing, need aware default settings change . Chart Type Choose Percent Volume Bar Labels Type Choose Percent Volume Chart Type: Percent ’s often helpful use Bar Labels Type = “volume” vice versa percent. means ’re less likely overstate differences sentiment volume low.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/articles/shiny_app_user_guide.html","id":"group-volume-over-time","dir":"Articles","previous_headings":"Compare Groups","what":"Group Volume Over Time","title":"Shiny App User Guide","text":"Functions similarly Volume Time chart Distribution Tab, groups. plot often benefits container resized using draggable element.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/articles/shiny_app_user_guide.html","id":"labelled-data","dir":"Articles","previous_headings":"","what":"Labelled Data","title":"Shiny App User Guide","text":"final tab displays data labelled far. can use Data Table filter sorting widgets arrange table please, can download data using widget top left. Enter name file wish download, append .csv file name, ’s need add .","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/articles/shiny_app_user_guide.html","id":"suggested-workflow","dir":"Articles","previous_headings":"","what":"Suggested Workflow","title":"Shiny App User Guide","text":"Load version LandscapeRGolem provided Data Science team, follow instructions run app locally vignette set app new data. Inspect regions conversation, delete spam & irrelevant areas /find . Map conversation favourite drawing/labelling software, ensure don’t forget interesting things find . identify particularly interesting specific area, add label later use.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jack Penzer. Maintainer, author. Mike Tapp. Author. Jamie Hudson. Author. Tim Mooney. Author. SHARE Creative. Copyright holder. Capture Intelligence. Copyright holder.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Penzer J, Tapp M, Hudson J, Mooney T (2023). LandscapeR: Turns Unstructured Text Data Navigable Landscape. R package version 0.0.0.9000, https://jpcompartir.github.io/LandscapeR.","code":"@Manual{,   title = {LandscapeR: Turns Unstructured Text Data Into A Navigable Landscape},   author = {Jack Penzer and Mike Tapp and Jamie Hudson and Tim Mooney},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://jpcompartir.github.io/LandscapeR}, }"},{"path":"https://jpcompartir.github.io/LandscapeR/index.html","id":"landscaper","dir":"","previous_headings":"","what":"Turns Unstructured Text Data Into A Navigable Landscape","title":"Turns Unstructured Text Data Into A Navigable Landscape","text":"LandscapeR R Package exploring text data transformed navigable landscape. package makes use cutting-edge language models dense word embeddings, dimensionality reduction techniques, clustering /topic modelling well Shiny interactive data-exploration & cleaning UI. conversation mapped appropriately, find mentions close together Shiny application/UMAP plot similar meanings, posts far apart less similar meanings. makes possible understand explore thousands, hundreds thousands, even millions posts level previously impossible.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Turns Unstructured Text Data Into A Navigable Landscape","text":"can install development version LandscapeR using install_github function devtools package: can take table text: transform navigable landscape:  can add colour grouping variable see groups sit relate:  can home group:  interesting use case can used inform LandscapeR investigative process comparing two grouping variables, cluster sentiment, product topic etc. ls_plot_variation_matrix() function:","code":"devtools::install_github(repo = \"jpcompartir/LandscapeR\") library(LandscapeR) library(tidyverse)  ls_example #> # A tibble: 11,226 × 9 #>    document text      cluster clean_text date                sentiment permalink #>       <dbl> <chr>       <dbl> <chr>      <dttm>              <chr>     <chr>     #>  1        1 @Shruthi…       4 shruthio3… 2022-10-26 12:17:22 positive  <a href=… #>  2        2 anyone u…       2 edge nonw… 2022-10-26 11:44:36 positive  <a href=… #>  3        3 Non tech…       7 tech peop… 2022-10-26 10:20:16 neutral   <a href=… #>  4        4 I really…       3 minority … 2022-10-26 06:25:23 positive  <a href=… #>  5        5 Chrome u…       2 chrome to… 2022-10-26 05:02:06 neutral   <a href=… #>  6        6 I still …       3 believeha… 2022-10-26 03:16:42 positive  <a href=… #>  7        7 Try edge…       2 edge rece… 2022-10-26 02:38:57 positive  <a href=… #>  8        8 telling …       2 telling t… 2022-10-26 01:49:56 positive  <a href=… #>  9        9 When I m…       7 move ptz … 2022-10-26 01:02:29 negative  <a href=… #> 10       10 I repent…       4 repent fi… 2022-10-25 23:26:41 positive  <a href=… #> # ℹ 11,216 more rows #> # ℹ 2 more variables: V1 <dbl>, V2 <dbl> ls_example %>% ls_plot_static() ls_example %>%   mutate(cluster = factor(cluster)) %>%   ls_plot_group_static(group_var = cluster) ls_example %>%   mutate(cluster = factor(cluster)) %>%   ls_plot_group_facet(group_var = cluster) ls_example %>%   ls_plot_variation_matrix(cluster, sentiment) #> Loading required namespace: viridis"},{"path":"https://jpcompartir.github.io/LandscapeR/index.html","id":"shiny-application","dir":"","previous_headings":"","what":"Shiny Application","title":"Turns Unstructured Text Data Into A Navigable Landscape","text":"--date version Shiny application, install LandscapeRGolem package: Check Running App Locally vignette tips run app.","code":"remotes::install_github(repo = \"jpcompartir/LandscaperGolem\")"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/column_type_checker.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick function for checking if a column is of the right type using data-masking — column_type_checker","title":"Quick function for checking if a column is of the right type using data-masking — column_type_checker","text":"Quick function checking column right type using data-masking","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/column_type_checker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick function for checking if a column is of the right type using data-masking — column_type_checker","text":"","code":"column_type_checker(data, column, type)"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/column_type_checker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick function for checking if a column is of the right type using data-masking — column_type_checker","text":"data Data Frame Tibble object column Column want check type column's expected type","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/column_type_checker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quick function for checking if a column is of the right type using data-masking — column_type_checker","text":"character vector","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/column_type_checker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quick function for checking if a column is of the right type using data-masking — column_type_checker","text":"","code":"if (FALSE) { check_text <- df %>% column_type_checker(text_var, \"character\")  if (check_text == \"no\") stop(\"Wrong type\") }"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/download_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — download_box","title":"Title — download_box","text":"Title","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/download_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — download_box","text":"","code":"download_box(exportname, plot, width = 300, height = 250)"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/download_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — download_box","text":"exportname Name export string plot plot download, stored reactive.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/download_box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — download_box","text":"download handler","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_create_note_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a re-sizeable text area to take notes in! — ls_create_note_area","title":"Add a re-sizeable text area to take notes in! — ls_create_note_area","text":"Add re-sizeable text area take notes !","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_create_note_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a re-sizeable text area to take notes in! — ls_create_note_area","text":"","code":"ls_create_note_area()"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_create_note_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a re-sizeable text area to take notes in! — ls_create_note_area","text":"movable shiny text box","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_create_note_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a re-sizeable text area to take notes in! — ls_create_note_area","text":"","code":"if (FALSE) { ui <- shiny::fluidPage(   ls_create_note_area() ) }"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Tibble of examples for LandscapeR functions & tests — ls_example","title":"Tibble of examples for LandscapeR functions & tests — ls_example","text":"Tibble examples LandscapeR functions & tests","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tibble of examples for LandscapeR functions & tests — ls_example","text":"","code":"data(\"ls_example\")"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tibble of examples for LandscapeR functions & tests — ls_example","text":"tibble 10 rows 5 columns document Post ID text Text variable data table permalink Link original post clean_text cleaner version text variable plots date Date variable ymd_hms format setniment Sentiment variable V1 x co-ordinates V2 y co-ordinates","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_link_click.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare a URL column to be clickable in Shiny/Data Table — ls_link_click","title":"Prepare a URL column to be clickable in Shiny/Data Table — ls_link_click","text":"allow click hyperlink load URL, e.g. selecting image. Make sure DataTable rendered argument 'escape = FALSE' column text.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_link_click.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare a URL column to be clickable in Shiny/Data Table — ls_link_click","text":"","code":"ls_link_click(df, url_var)"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_link_click.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare a URL column to be clickable in Shiny/Data Table — ls_link_click","text":"df Data Frame Tibble Object url_var URL Column","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_link_click.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare a URL column to be clickable in Shiny/Data Table — ls_link_click","text":"data frame URL column edited clickable","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_group_facet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create static plots for each level of a grouping variable. — ls_plot_group_facet","title":"Create static plots for each level of a grouping variable. — ls_plot_group_facet","text":"level grouping variable receive plot level highlighted every post highlighted.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_group_facet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create static plots for each level of a grouping variable. — ls_plot_group_facet","text":"","code":"ls_plot_group_facet(   df,   x_var = V1,   y_var = V2,   group_var,   nrow = 3,   fill_colour = \"blue\",   output = c(\"wrapped_plots\", \"list_of_plots\", \"wrapped_and_list\") )"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_group_facet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create static plots for each level of a grouping variable. — ls_plot_group_facet","text":"df Data Frame Tibble object x_var variable containing x-coordinates y_var variable containing y-coordinates group_var grouping variable iteratively highlight nrow many rows -plots-wrapped version fill_colour colour highlighted variable output Whether return one plot levels grouping variable, separate plots wrapped version separate plots nested list.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_group_facet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create static plots for each level of a grouping variable. — ls_plot_group_facet","text":"Dependent input output. See output documentation information.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_group_facet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create static plots for each level of a grouping variable. — ls_plot_group_facet","text":"","code":"df <- ls_example df %>% ls_plot_group_facet(group_var = cluster, fill_colour = \"midnightblue\", nrow = 3)"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_group_sent.html","id":null,"dir":"Reference","previous_headings":"","what":"Quickly plot group sentiment distributions as a percentage in LandscapeR shiny app — ls_plot_group_sent","title":"Quickly plot group sentiment distributions as a percentage in LandscapeR shiny app — ls_plot_group_sent","text":"Quickly plot group sentiment distributions percentage LandscapeR shiny app","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_group_sent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quickly plot group sentiment distributions as a percentage in LandscapeR shiny app — ls_plot_group_sent","text":"","code":"ls_plot_group_sent(   df,   group_var = cluster,   sentiment_var = sentiment,   type = c(\"percent\", \"volume\"),   title = \"Grouped Sentiment Chart\",   bar_labels = c(\"none\", \"percent\", \"volume\") )"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_group_sent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quickly plot group sentiment distributions as a percentage in LandscapeR shiny app — ls_plot_group_sent","text":"df data frame group_var Grouping variable, e.g. country, topic, cluster sentiment_var Sentiment variable (categorical) type Whether plot volume py percentage. Accepts \"percent\" \"volume\" title title plot, entered string. bar_labels Whether add raw volume, percentage neither bars","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_group_sent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quickly plot group sentiment distributions as a percentage in LandscapeR shiny app — ls_plot_group_sent","text":"Ggplot stacked bar chart x y co-ords flipped","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_group_static.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a landscape plot and colour in each level of a grouping variable. — ls_plot_group_static","title":"Create a landscape plot and colour in each level of a grouping variable. — ls_plot_group_static","text":"Default colour mapping uses viridis palette, can simply add different colour maps plot using standard ggplot syntax, return object ggplot object e.g. plot + scale_colour_manual(values = ...)","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_group_static.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a landscape plot and colour in each level of a grouping variable. — ls_plot_group_static","text":"","code":"ls_plot_group_static(df, x_var = V1, y_var = V2, group_var, point_size = 0.1)"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_group_static.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a landscape plot and colour in each level of a grouping variable. — ls_plot_group_static","text":"df Data Frame Tibble object x_var variable containing x-coordinates y_var variable containing y-coordinates group_var grouping variable iteratively highlight point_size big point ","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_group_static.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a landscape plot and colour in each level of a grouping variable. — ls_plot_group_static","text":"ggplot object","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_group_static.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a landscape plot and colour in each level of a grouping variable. — ls_plot_group_static","text":"","code":"df <- ls_example %>% dplyr::mutate(cluster = factor(cluster)) df %>% ls_plot_group_static(group_var = cluster)"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_group_vol_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Quickly plot faceted volume of groups over time in a LandscapeR Shiny App — ls_plot_group_vol_time","title":"Quickly plot faceted volume of groups over time in a LandscapeR Shiny App — ls_plot_group_vol_time","text":"Quickly plot faceted volume groups time LandscapeR Shiny App","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_group_vol_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quickly plot faceted volume of groups over time in a LandscapeR Shiny App — ls_plot_group_vol_time","text":"","code":"ls_plot_group_vol_time(   df,   group_var = group,   date_var = date,   unit = c(\"day\", \"week\", \"month\", \"quarter\", \"year\"),   nrow = 4 )"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_group_vol_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quickly plot faceted volume of groups over time in a LandscapeR Shiny App — ls_plot_group_vol_time","text":"df Data frame tibble group_var grouping variable e.g. country, cluster, topic etc. date_var Variable contains date information (can datetime think) unit single unit time fed lubridate::floor_date  \"week\", \"day\", \"month\",\"quarter\", \"year\" nrow many rows plot shown ","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_group_vol_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quickly plot faceted volume of groups over time in a LandscapeR Shiny App — ls_plot_group_vol_time","text":"ggplot object faceted bar charts","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_sentiment_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — ls_plot_sentiment_distribution","title":"Title — ls_plot_sentiment_distribution","text":"Title","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_sentiment_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — ls_plot_sentiment_distribution","text":"","code":"ls_plot_sentiment_distribution(df, sentiment_var = sentiment)"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_sentiment_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — ls_plot_sentiment_distribution","text":"df Data Frame Tibble Object sentiment_var Name sentiment variable =","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_sentiment_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — ls_plot_sentiment_distribution","text":"ggplot object","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_static.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a landscape plot without segmenting by groups — ls_plot_static","title":"Create a landscape plot without segmenting by groups — ls_plot_static","text":"Create landscape plot without segmenting groups","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_static.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a landscape plot without segmenting by groups — ls_plot_static","text":"","code":"ls_plot_static(df, x_var = V1, y_var = V2, fill_colour = \"black\")"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_static.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a landscape plot without segmenting by groups — ls_plot_static","text":"df Data Frame Tibble object x_var variable containing x-coordinates y_var variable containing y-coordinates fill_colour colour points ","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_static.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a landscape plot without segmenting by groups — ls_plot_static","text":"ggplot object","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_static.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a landscape plot without segmenting by groups — ls_plot_static","text":"","code":"df <- ls_example df %>% ls_plot_group_static()"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_tokens_counter.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — ls_plot_tokens_counter","title":"Title — ls_plot_tokens_counter","text":"Title","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_tokens_counter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — ls_plot_tokens_counter","text":"","code":"ls_plot_tokens_counter(   df,   text_var = .data$mention_content,   top_n = 20,   fill = \"#0f50d2\" )"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_tokens_counter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — ls_plot_tokens_counter","text":"df Data Frame Tibble object text_var Name text variable top_n Number tokens show fill Colour - string hexcode","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_tokens_counter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — ls_plot_tokens_counter","text":"ggplot object","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_variation_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare proportion of x in y — ls_plot_variation_matrix","title":"Compare proportion of x in y — ls_plot_variation_matrix","text":"Use function compare two grouping variables, example see percentage cluster fall sentiment category (volume).","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_variation_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare proportion of x in y — ls_plot_variation_matrix","text":"","code":"ls_plot_variation_matrix(df, x_var, y_var)"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_variation_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare proportion of x in y — ls_plot_variation_matrix","text":"df Data Frame Tibble object x_var grouping variable x axis. y_var grouping variable y axis.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_variation_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare proportion of x in y — ls_plot_variation_matrix","text":"ggplot object","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_variation_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare proportion of x in y — ls_plot_variation_matrix","text":"","code":"ls_example %>% ls_plot_variation_matrix(cluster, sentiment) #> Loading required namespace: viridis #> Error in loadNamespace(x): there is no package called ‘viridis’"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_volume_over_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — ls_plot_volume_over_time","title":"Title — ls_plot_volume_over_time","text":"Title","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_volume_over_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — ls_plot_volume_over_time","text":"","code":"ls_plot_volume_over_time(df, .date_var, unit = \"week\", fill = \"#0f50d2\")"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_volume_over_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — ls_plot_volume_over_time","text":"df Data Frame Tibble object .date_var Name date variable unit Unit time fill Colour - string hexcode","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plot_volume_over_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — ls_plot_volume_over_time","text":"ggplot object","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plotly_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a landscape plot inside a shiny app — ls_plotly_umap","title":"Render a landscape plot inside a shiny app — ls_plotly_umap","text":"Renders interactive plotly plot ","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plotly_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a landscape plot inside a shiny app — ls_plotly_umap","text":"","code":"ls_plotly_umap(data, x, y, type, group_var, key, text_var, height, width)"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plotly_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a landscape plot inside a shiny app — ls_plotly_umap","text":"data Data Frame tibble object, likely need called brackets reactive x X co-ordinate variable (string) y Y co-ordinate variable (string) type type plotly chart render, usually 'scattergl' performance group_var variable colour (string) key ID column (string) text_var Text variable (string) height Height plot (strong) width Width plot (string)","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plotly_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render a landscape plot inside a shiny app — ls_plotly_umap","text":"plotly object","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plotly_umap.html","id":"calling-the-function","dir":"Reference","previous_headings":"","what":"Calling the function","title":"Render a landscape plot inside a shiny app — ls_plotly_umap","text":"Due plotly's non-standard evaluation need feed column names, color, x, y, text, key, strings.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_plotly_umap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render a landscape plot inside a shiny app — ls_plotly_umap","text":"","code":"if (FALSE) { LandscapeR::ls_example %>%   dplyr::mutate(cluster = factor(cluster)) %>%   ls_plotly_umap(     x = \"V1\", y = \"V2\", type = \"scattergl\",     key = \"document\", text_var = \"text\", group_var = \"cluster\", height = 600, width = 800   ) }"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_sentiment_over_time.html","id":null,"dir":"Reference","previous_headings":"","what":"View a sentiment and volume over time chart — ls_sentiment_over_time","title":"View a sentiment and volume over time chart — ls_sentiment_over_time","text":"Data counted function, input data uncounted, unsummarised form, .e. use count(), summarise(n())","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_sentiment_over_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View a sentiment and volume over time chart — ls_sentiment_over_time","text":"","code":"ls_sentiment_over_time(   df,   sentiment_var = sentiment,   date_var = date,   unit = c(\"week\", \"day\", \"month\", \"quarter\", \"year\") )"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_sentiment_over_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View a sentiment and volume over time chart — ls_sentiment_over_time","text":"df Data Frame Tibble object sentiment_var Name sentiment variable date_var Name date variable unit Time unit count sentiment ","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_sentiment_over_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View a sentiment and volume over time chart — ls_sentiment_over_time","text":"ggplot object","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_wlos.html","id":null,"dir":"Reference","previous_headings":"","what":"A LandscapeR version of ParseR's Weighted Log-odds — ls_wlos","title":"A LandscapeR version of ParseR's Weighted Log-odds — ls_wlos","text":"Function used identifying differences levels grouping variable.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_wlos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A LandscapeR version of ParseR's Weighted Log-odds — ls_wlos","text":"","code":"ls_wlos(   df,   group_var = cluster,   text_var = clean_text,   top_n = 30,   text_size = 4,   nrow = 4,   top_terms_cutoff = 5000 )"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_wlos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A LandscapeR version of ParseR's Weighted Log-odds — ls_wlos","text":"df Data Frame Tibble object group_var variable group e.g. topic, sentiment text_var text variable top_n Number terms per plot text_size integer determining text size, higher = larger nrow Number rows display plots across top_terms_cutoff top x words WLOs calculated ","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/ls_wlos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A LandscapeR version of ParseR's Weighted Log-odds — ls_wlos","text":"ggplot object","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/reactive_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Programmatically generate reactive labels from a prefix — reactive_labels","title":"Programmatically generate reactive labels from a prefix — reactive_labels","text":"Programmatically generate reactive labels prefix","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/reactive_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Programmatically generate reactive labels from a prefix — reactive_labels","text":"","code":"reactive_labels(prefix, input)"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/reactive_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Programmatically generate reactive labels from a prefix — reactive_labels","text":"prefix type plot e.g. 'sentiment' input reading Shiny's server input object - list inputs.","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/reactive_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Programmatically generate reactive labels from a prefix — reactive_labels","text":"ggplot boiler-plate code dynamically generated inputs","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/titles_render.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — titles_render","title":"Title — titles_render","text":"Title","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/titles_render.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — titles_render","text":"","code":"titles_render(plot_type, input)"},{"path":"https://jpcompartir.github.io/LandscapeR/reference/titles_render.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — titles_render","text":"plot_type Name plot type string","code":""},{"path":"https://jpcompartir.github.io/LandscapeR/reference/titles_render.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — titles_render","text":"ggplot boilerplate code","code":""}]
